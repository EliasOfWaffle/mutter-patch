From 15b605a93e508fcb6b36ea46b8446f28289c32a0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Florian=20M=C3=BCllner?= <fmuellner@gnome.org>
Date: Wed, 25 Jun 2014 22:59:20 +0200
Subject: [PATCH] Revert "Update (allow-none) annotations"

This reverts commit d380d30ef447b9c343c05a3b43f57334a871e147.

Conflicts:
	src/core/display.c
---
 src/backends/meta-idle-monitor.c     | 8 ++++----
 src/compositor/cogl-utils.c          | 2 +-
 src/compositor/compositor.c          | 2 +-
 src/compositor/meta-shadow-factory.c | 2 +-
 src/core/display.c                   | 4 ++--
 src/core/keybindings.c               | 2 +-
 src/core/prefs.c                     | 4 ++--
 src/core/window.c                    | 6 +++---
 8 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/src/backends/meta-idle-monitor.c b/src/backends/meta-idle-monitor.c
index 5b84ce9..688cf51 100644
--- a/src/backends/meta-idle-monitor.c
+++ b/src/backends/meta-idle-monitor.c
@@ -210,9 +210,9 @@ make_watch (MetaIdleMonitor           *monitor,
  * meta_idle_monitor_add_idle_watch:
  * @monitor: A #MetaIdleMonitor
  * @interval_msec: The idletime interval, in milliseconds
- * @callback: (nullable): The callback to call when the user has
+ * @callback: (allow-none): The callback to call when the user has
  *     accumulated @interval_msec milliseconds of idle time.
- * @user_data: (nullable): The user data to pass to the callback
+ * @user_data: (allow-none): The user data to pass to the callback
  * @notify: A #GDestroyNotify
  *
  * Returns: a watch id
@@ -252,9 +252,9 @@ meta_idle_monitor_add_idle_watch (MetaIdleMonitor	       *monitor,
 /**
  * meta_idle_monitor_add_user_active_watch:
  * @monitor: A #MetaIdleMonitor
- * @callback: (nullable): The callback to call when the user is
+ * @callback: (allow-none): The callback to call when the user is
  *     active again.
- * @user_data: (nullable): The user data to pass to the callback
+ * @user_data: (allow-none): The user data to pass to the callback
  * @notify: A #GDestroyNotify
  *
  * Returns: a watch id
diff --git a/src/compositor/cogl-utils.c b/src/compositor/cogl-utils.c
index 962fe88..fe4893c 100644
--- a/src/compositor/cogl-utils.c
+++ b/src/compositor/cogl-utils.c
@@ -68,7 +68,7 @@ meta_create_color_texture_4ub (guint8           red,
 
 /**
  * meta_create_texture_pipeline:
- * @src_texture: (nullable): texture to use initially for the layer
+ * @src_texture: (allow-none): texture to use initially for the layer
  *
  * Creates a pipeline with a single layer. Using a common template
  * makes it easier for Cogl to share a shader for different uses in
diff --git a/src/compositor/compositor.c b/src/compositor/compositor.c
index c84a1c6..532d006 100644
--- a/src/compositor/compositor.c
+++ b/src/compositor/compositor.c
@@ -595,7 +595,7 @@ meta_compositor_unmanage (MetaCompositor *compositor)
 /**
  * meta_shape_cow_for_window:
  * @compositor: A #MetaCompositor
- * @window: (nullable): A #MetaWindow to shape the COW for
+ * @window: (allow-none): A #MetaWindow to shape the COW for
  *
  * Sets an bounding shape on the COW so that the given window
  * is exposed. If @window is %NULL it clears the shape again.
diff --git a/src/compositor/meta-shadow-factory.c b/src/compositor/meta-shadow-factory.c
index 9af6383..efc1183 100644
--- a/src/compositor/meta-shadow-factory.c
+++ b/src/compositor/meta-shadow-factory.c
@@ -189,7 +189,7 @@ meta_shadow_unref (MetaShadow *shadow)
  * @window_y: y position of the region to paint a shadow for
  * @window_width: actual width of the region to paint a shadow for
  * @window_height: actual height of the region to paint a shadow for
- * @clip: (nullable): if non-%NULL specifies the visible portion
+ * @clip: (allow-none): if non-%NULL specifies the visible portion
  *   of the shadow.
  * @clip_strictly: if %TRUE, drawing will be clipped strictly
  *   to @clip, otherwise, it will be only used to optimize
diff --git a/src/core/display.c b/src/core/display.c
index 65e6489..bb9a2cf 100644
--- a/src/core/display.c
+++ b/src/core/display.c
@@ -2512,7 +2512,7 @@ mru_cmp (gconstpointer a,
  * meta_display_get_tab_list:
  * @display: a #MetaDisplay
  * @type: type of tab list
- * @workspace: (nullable): origin workspace
+ * @workspace: (allow-none): origin workspace
  *
  * Determine the list of windows that should be displayed for Alt-TAB
  * functionality.  The windows are returned in most recently used order.
@@ -2580,7 +2580,7 @@ meta_display_get_tab_list (MetaDisplay   *display,
  * @display: a #MetaDisplay
  * @type: type of tab list
  * @workspace: origin workspace
- * @window: (nullable): starting window
+ * @window: (allow-none): starting window
  * @backward: If %TRUE, look for the previous window.
  *
  * Determine the next window that should be displayed for Alt-TAB
diff --git a/src/core/keybindings.c b/src/core/keybindings.c
index f1414a5..4d9c600 100644
--- a/src/core/keybindings.c
+++ b/src/core/keybindings.c
@@ -3193,7 +3193,7 @@ handle_switch_vt (MetaDisplay     *display,
 /**
  * meta_keybindings_set_custom_handler:
  * @name: The name of the keybinding to set
- * @handler: (nullable): The new handler function
+ * @handler: (allow-none): The new handler function
  * @user_data: User data to pass to the callback
  * @free_data: Will be called when this handler is overridden.
  *
diff --git a/src/core/prefs.c b/src/core/prefs.c
index 06b2f70..3b520bb 100644
--- a/src/core/prefs.c
+++ b/src/core/prefs.c
@@ -180,7 +180,7 @@ typedef struct
 
 /**
  * MetaStringPreference:
- * @handler: (nullable): A handler. Many of the string preferences
+ * @handler: (allow-none): A handler. Many of the string preferences
  * aren't stored as strings and need parsing; others of them have
  * default values which can't be solved in the general case.  If you
  * include a function pointer here, it will be called instead of writing
@@ -192,7 +192,7 @@ typedef struct
  * in particular the @result (out) parameter as returned by
  * g_settings_get_mapped() will be ignored in all cases.
  * This may be %NULL.  If it is, see "target", below.
- * @target: (nullable): Where to write the incoming string.
+ * @target: (allow-none): Where to write the incoming string.
  * This must be %NULL if the handler is non-%NULL.
  * If the incoming string is %NULL, no change will be made.
  */
diff --git a/src/core/window.c b/src/core/window.c
index e98b287..850d67f 100644
--- a/src/core/window.c
+++ b/src/core/window.c
@@ -4820,7 +4820,7 @@ meta_window_get_icon_geometry (MetaWindow    *window,
 /**
  * meta_window_set_icon_geometry:
  * @window: a #MetaWindow
- * @rect: (nullable): rectangle with the desired geometry or %NULL.
+ * @rect: (allow-none): rectangle with the desired geometry or %NULL.
  *
  * Sets or unsets the location of the icon corresponding to the window. If
  * set, the location should correspond to a dock, task bar or other user
@@ -7320,7 +7320,7 @@ meta_window_get_frame_type (MetaWindow *window)
  *
  * Gets a region representing the outer bounds of the window's frame.
  *
- * Return value: (transfer none) (nullable): a #cairo_region_t
+ * Return value: (transfer none) (allow-none): a #cairo_region_t
  *  holding the outer bounds of the window, or %NULL if the window
  *  doesn't have a frame.
  */
@@ -7365,7 +7365,7 @@ meta_window_is_attached_dialog (MetaWindow *window)
  *  - there is no 3rd window stacked between both tiled windows that's
  *    partially visible in the common edge.
  *
- * Return value: (transfer none) (nullable): the matching tiled window or
+ * Return value: (transfer none) (allow-none): the matching tiled window or
  * %NULL if it doesn't exist.
  */
 MetaWindow *
-- 
2.0.0

